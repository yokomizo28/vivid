"""
Django settings for vivid project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR：djangoの中で定義された変数。
# デフォルトでは manage.py が入っているフォルダ(djangoで一番上部の階層)
# どの場所を指定するにしても、まずはBASE_DIRを指定しておくと良い
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-a4hqqmtb9h$p$%+)o4r8q6_bt6tiyv#7!gum)7+v=m7jji0s%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

# Djangoインスタンスの中で有効化されているすべてのDjangoアプリケーションの名前を保持
INSTALLED_APPS = [
    # 管理(admin)サイト
    'django.contrib.admin',
    # 認証システム
    'django.contrib.auth',
    # コンテンツタイプフレームワーク
    'django.contrib.contenttypes',
    # セッションフレームワーク
    'django.contrib.sessions',
    # メッセージフレームワーク
    'django.contrib.messages',
    # 静的ファイルの管理フレームワーク
    'django.contrib.staticfiles',
    # ここまではよく使われるのでデフォルトで入っている

    'top.apps.TopConfig',
    'search.apps.SearchConfig',
    'contents.apps.ContentsConfig',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vivid.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # templateで'MEDIA_URL'認識の為に追加
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'vivid.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        # 環境変数を作って呼び出す場合はosをimportして使用する(とりあえずあとで)
        # ENGINE:使用するデータベースバックエンドを指定
        'ENGINE': 'django.db.backends.postgresql',
        # NAME:使用するデータベースの名前(後々変更)
        'NAME': 'vivid',
        # USER:データベース接続時に使用するユーザ名
        'USER': 'user01', #'USER': os.environ.get('DB_USER'),
        # PASSWORD:データベース接続時に使用するパスワード
        'PASSWORD': 'user01', #'PASSWORD': os.environ.get('DB_PASSWORD'),
        # HOST:データベース接続時に使用するホスト(空文字=ローカルホスト)
        # windowsの場合はUNIXドメインソケットが使用できないから常に定義する必要があるみたい
        'HOST': 'localhost', # or 'HOST': '127.0.0.1'?
        # PORT:データベース接続時に使用するポート(空文字=デフォルトのポート)
        'PORT': '',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

#LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'ja'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
# staticファイルが格納されているディレクトリを宣言しておく
# →template内では、staticテンプレートタグ: {% static %} を使って、
# staticフォルダ以下の相対パスのURLを生成できる
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
